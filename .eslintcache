[{"/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/index.tsx":"1","/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/App.tsx":"2","/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/styles/global.ts":"3","/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/pages/SignIn/index.tsx":"4","/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/pages/SignIn/styles.ts":"5","/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/pages/SignUp/index.tsx":"6","/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/pages/SignUp/styles.ts":"7","/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/components/Button/index.tsx":"8","/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/components/Input/index.tsx":"9","/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/components/Button/styles.ts":"10","/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/components/Input/styles.ts":"11","/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/utils/getValidationErrors.ts":"12","/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/components/Tooltip/index.tsx":"13","/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/components/Tooltip/styles.ts":"14"},{"size":198,"mtime":1610657891542,"results":"15","hashOfConfig":"16"},{"size":257,"mtime":1611347206030,"results":"17","hashOfConfig":"16"},{"size":456,"mtime":1610659014935,"results":"18","hashOfConfig":"16"},{"size":1901,"mtime":1611347398129,"results":"19","hashOfConfig":"16"},{"size":1140,"mtime":1611260203097,"results":"20","hashOfConfig":"16"},{"size":1943,"mtime":1611265530338,"results":"21","hashOfConfig":"16"},{"size":1144,"mtime":1611260779442,"results":"22","hashOfConfig":"16"},{"size":338,"mtime":1611260746190,"results":"23","hashOfConfig":"16"},{"size":1578,"mtime":1611346663593,"results":"24","hashOfConfig":"16"},{"size":380,"mtime":1611260754691,"results":"25","hashOfConfig":"16"},{"size":1098,"mtime":1611346723685,"results":"26","hashOfConfig":"16"},{"size":321,"mtime":1611265537330,"results":"27","hashOfConfig":"16"},{"size":367,"mtime":1611346907962,"results":"28","hashOfConfig":"16"},{"size":738,"mtime":1611346904502,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"pbi60m",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/index.tsx",[],["61","62","63","64","65"],"/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/App.tsx",["66","67"],"/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/styles/global.ts",[],"/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/pages/SignIn/index.tsx",["68"],"/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/pages/SignIn/styles.ts",[],"/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/pages/SignUp/index.tsx",["69"],"import React, { useCallback, useRef } from 'react';\nimport { FiArrowLeft, FiUser, FiMail, FiLock } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, Background } from './styles';\n\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nconst SignUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const handleSubmit = useCallback(async (data: any) => {\n    try {\n      formRef.current?.setErrors({});\n\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        email: Yup.string()\n          .email('Digite um e-mail válido')\n          .required('E-mail obrigatório'),\n        password: Yup.string().min(6, 'No mínimo 6 dígitos'),\n      });\n\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        const errors = getValidationErrors(err);\n\n        formRef.current?.setErrors(errors);\n      }\n    }\n  }, []);\n\n  return (\n    <Container>\n      <Background />\n      <Content>\n        <img src={logoImg} alt=\"GoBarber\" />\n\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <h1>Faça seu cadastro</h1>\n\n          <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n\n          <Input\n            name=\"password\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Senha\"\n          />\n\n          <Button type=\"submit\">Cadastrar</Button>\n        </Form>\n\n        <a href=\"signup\">\n          <FiArrowLeft />\n          Voltar para logon\n        </a>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/pages/SignUp/styles.ts",[],"/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/components/Button/index.tsx",[],"/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/components/Input/index.tsx",[],"/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/components/Button/styles.ts",[],"/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/components/Input/styles.ts",[],"/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/utils/getValidationErrors.ts",["70"],"import { ValidationError } from 'yup';\n\ninterface Errors {\n  [key: string]: string;\n}\n\nexport default function getValidationErrors(err: ValidationError): Errors {\n  const validationErrors: Errors = {};\n\n  err.inner.forEach(error => {\n    validationErrors[error.path!] = error.message;\n  });\n\n  return validationErrors;\n}\n","/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/components/Tooltip/index.tsx",[],"/Users/q1irz4b/Documents/src/course/react-ts-gobarber/src/components/Tooltip/styles.ts",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":14},{"ruleId":"85","severity":1,"message":"86","line":6,"column":1,"nodeType":"87","messageId":"88","endLine":6,"endColumn":15},{"ruleId":"89","severity":1,"message":"90","line":18,"column":49,"nodeType":"91","messageId":"92","endLine":18,"endColumn":52,"suggestions":"93"},{"ruleId":"89","severity":1,"message":"90","line":19,"column":49,"nodeType":"91","messageId":"92","endLine":19,"endColumn":52,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":11,"column":22,"nodeType":"97","messageId":"98","endLine":11,"endColumn":33},"lines-around-directive",["99"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'SignUp' is defined but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["100","101"],["102","103"],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","padding-line-between-statements",{"messageId":"104","fix":"105","desc":"106"},{"messageId":"107","fix":"108","desc":"109"},{"messageId":"104","fix":"110","desc":"106"},{"messageId":"107","fix":"111","desc":"109"},"suggestUnknown",{"range":"112","text":"113"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"112","text":"114"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"115","text":"113"},{"range":"115","text":"114"},[610,613],"unknown","never",[623,626]]